#Scam casino bot, just for educational purposes, so i am not responsible for its use
import os
import random
import re
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram import executor
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
API_TOKEN = 'Insert here yours token'
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

class Form:
    check_password = 'check_password'
    ask_game_link = 'ask_game_link'

async def remove_language_buttons(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton('START!'), KeyboardButton('–í—ã—Ö–æ–¥'))
    await message.reply('–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É START!üöÄüçÄ', reply_markup=keyboard)

async def check_password(message: types.Message):
    if message.text != 'jet100start':
        await message.answer('–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return False
    else:
        await message.answer('–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ.')
        return True

def is_valid_url(url):
    regex = r'^https:'
    return re.match(regex, url)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton('–†—É—Å—Å–∫–∏–π'), KeyboardButton('English'))
    await message.answer('Please choose a language:', reply_markup=keyboard)

@dp.message_handler(lambda message: message.text in ['–†—É—Å—Å–∫–∏–π', 'English'], state='*')
async def choose_language(message: types.Message):
    language = message.text
    user_name = message.from_user.first_name
    if message.from_user.last_name:
        user_name += ' ' + message.from_user.last_name
    
    if language == '–†—É—Å—Å–∫–∏–π':
        await message.reply_photo(open('photos/lucky.jpeg', 'rb'), f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ, {user_name}! üöÄüçÄ\n –≠—Ç–æ—Ç –±–æ—Ç –¥–∞—Å—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞ –∏–≥—Ä–µ –õ–∞–∫–∏ –î–∂–µ—Ç.\n –í—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —ç—Ç–æ –∑–∞–π—Ç–∏ –≤ –∏–≥—Ä—É –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ‚§µÔ∏è –°–õ–ï–î–£–Æ–©–ò–ô –°–ò–ì–ù–ê–õ.\n –ë–æ—Ç –≤—ã–¥–∞—Å—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, –∞ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –∏ –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤—ã–∏–≥—Ä—ã—àüí∞')
    else:
        await message.reply_photo(open('photos/lucky.jpeg', 'rb'), f'I welcome you to our team, {user_name}! üöÄüçÄ\n This bot gives you the opportunity to earn money consistently every day in the Lucky Jet game. All you need to do is go into the game and press the ‚§µÔ∏è NEXT SIGNAL button. The bot will give you the odds, and your task is to place a bet and collect your first winningsüí∞')

    await remove_language_buttons(message)

@dp.message_handler(lambda message: message.text == 'START!', state='*')
async def ask_for_password(message: types.Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ:')
    await state.set_state(Form.check_password)

@dp.message_handler(state=Form.check_password)
async def process_password(message: types.Message, state: FSMContext):
    is_valid_password = await check_password(message)
    if is_valid_password:
        await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É:')
        await state.set_state(Form.ask_game_link)
    else:
        await ask_for_password(message, state)

@dp.message_handler(state=Form.ask_game_link)
async def process_game_link(message: types.Message, state: FSMContext):
    game_link = message.text
    if is_valid_url(game_link):
        await message.answer('–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É –ø—Ä–∏–Ω—è—Ç–∞.')
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç'), KeyboardButton('–í—ã—Ö–æ–¥'))
        await message.answer('–ù–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç" –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.', reply_markup=keyboard)
        await state.finish()
    else:
        await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')

@dp.message_handler(lambda message: message.text == '–í—ã—Ö–æ–¥', state='*')
async def restart_bot(message: types.Message):
    await start(message)

@dp.message_handler(lambda message: message.text == '–ü–æ–ª—É—á–∏—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç', state='*')
async def send_random_photo(message: types.Message):
    photos_directory = 'photos'
    photo_files = os.listdir(photos_directory)
    random_photo = random.choice(photo_files)
    with open(os.path.join(photos_directory, random_photo), 'rb') as photo:
        await message.answer_photo(photo)

@dp.message_handler()
async def echo_message(message: types.Message):
    await choose_language(message)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
